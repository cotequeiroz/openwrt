--- a/lib/util/stats.c
+++ b/lib/util/stats.c
@@ -107,8 +107,8 @@ int stats_print(struct stats_record *sta
 			return 0;
 
 		if (first) {
-			printf("Period of %fs ending at %lu.%06lu\n", period,
-			       t.tv_sec, t.tv_nsec / 1000);
+			printf("Period of %fs ending at %ju.%06lu\n", period,
+			       (uintmax_t)t.tv_sec, t.tv_nsec / 1000);
 			first = false;
 		}
 
--- a/xdp-dump/xdpdump.c
+++ b/xdp-dump/xdpdump.c
@@ -644,9 +644,10 @@ static bool capture_on_legacy_interface(
 			char hline[SNPRINTH_MIN_BUFFER_SIZE];
 
 			if (cfg->hex_dump) {
-				printf("%lu.%06lu: packet size %u bytes, "
+				printf("%ju.%06ju: packet size %u bytes, "
 				       "captured %u bytes on if_name \"%s\"\n",
-				       h.ts.tv_sec, h.ts.tv_usec,
+				       (uintmax_t)h.ts.tv_sec,
+				       (uintmax_t)h.ts.tv_usec,
 				       h.len, h.caplen, cfg->iface.ifname);
 
 				for (i = 0; i < h.caplen; i += 16) {
@@ -655,9 +656,10 @@ static bool capture_on_legacy_interface(
 					printf("  %s\n", hline);
 				}
 			} else {
-				printf("%lu.%06lu: packet size %u bytes on "
+				printf("%ju.%06ju: packet size %u bytes on "
 				       "if_name \"%s\"\n",
-				       h.ts.tv_sec, h.ts.tv_usec,
+				       (uintmax_t)h.ts.tv_sec,
+				       (uintmax_t)h.ts.tv_usec,
 				       h.len, cfg->iface.ifname);
 			}
 		}
