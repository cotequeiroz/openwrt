From 0d4900ccd1c7ec5c5ffecf5040f9c07a6a32deef Mon Sep 17 00:00:00 2001
From: Daniel Golle <daniel@makrotopia.org>
Date: Thu, 3 May 2018 13:12:35 +0200
Subject: [PATCH 2/2] Revert "wpa_supplicant: Rename wpas_event_*() to
 wpas_ap_event_*()"

This reverts commit 2dd5fbbff884af488870a37e339b4817c83954de.
---
 wpa_supplicant/ap.c     | 20 ++++++++++----------
 wpa_supplicant/ap.h     | 18 +++++++++---------
 wpa_supplicant/events.c | 13 ++++++-------
 3 files changed, 25 insertions(+), 26 deletions(-)

--- a/wpa_supplicant/ap.c
+++ b/wpa_supplicant/ap.c
@@ -1537,8 +1537,8 @@ int wpas_ap_pmksa_cache_add_external(str
 
 
 #ifdef NEED_AP_MLME
-void wpas_ap_event_dfs_radar_detected(struct wpa_supplicant *wpa_s,
-				      struct dfs_event *radar)
+void wpas_event_dfs_radar_detected(struct wpa_supplicant *wpa_s,
+				   struct dfs_event *radar)
 {
 	if (!wpa_s->ap_iface || !wpa_s->ap_iface->bss[0])
 		return;
@@ -1550,8 +1550,8 @@ void wpas_ap_event_dfs_radar_detected(st
 }
 
 
-void wpas_ap_event_dfs_cac_started(struct wpa_supplicant *wpa_s,
-				   struct dfs_event *radar)
+void wpas_event_dfs_cac_started(struct wpa_supplicant *wpa_s,
+				struct dfs_event *radar)
 {
 	if (!wpa_s->ap_iface || !wpa_s->ap_iface->bss[0])
 		return;
@@ -1562,8 +1562,8 @@ void wpas_ap_event_dfs_cac_started(struc
 }
 
 
-void wpas_ap_event_dfs_cac_finished(struct wpa_supplicant *wpa_s,
-				    struct dfs_event *radar)
+void wpas_event_dfs_cac_finished(struct wpa_supplicant *wpa_s,
+				 struct dfs_event *radar)
 {
 	if (!wpa_s->ap_iface || !wpa_s->ap_iface->bss[0])
 		return;
@@ -1574,8 +1574,8 @@ void wpas_ap_event_dfs_cac_finished(stru
 }
 
 
-void wpas_ap_event_dfs_cac_aborted(struct wpa_supplicant *wpa_s,
-				   struct dfs_event *radar)
+void wpas_event_dfs_cac_aborted(struct wpa_supplicant *wpa_s,
+				struct dfs_event *radar)
 {
 	if (!wpa_s->ap_iface || !wpa_s->ap_iface->bss[0])
 		return;
@@ -1586,8 +1586,8 @@ void wpas_ap_event_dfs_cac_aborted(struc
 }
 
 
-void wpas_ap_event_dfs_cac_nop_finished(struct wpa_supplicant *wpa_s,
-					struct dfs_event *radar)
+void wpas_event_dfs_cac_nop_finished(struct wpa_supplicant *wpa_s,
+				     struct dfs_event *radar)
 {
 	if (!wpa_s->ap_iface || !wpa_s->ap_iface->bss[0])
 		return;
--- a/wpa_supplicant/ap.h
+++ b/wpa_supplicant/ap.h
@@ -89,16 +89,16 @@ int wpas_ap_pmksa_cache_list_mesh(struct
 				  char *buf, size_t len);
 int wpas_ap_pmksa_cache_add_external(struct wpa_supplicant *wpa_s, char *cmd);
 
-void wpas_ap_event_dfs_radar_detected(struct wpa_supplicant *wpa_s,
-				      struct dfs_event *radar);
-void wpas_ap_event_dfs_cac_started(struct wpa_supplicant *wpa_s,
+void wpas_event_dfs_radar_detected(struct wpa_supplicant *wpa_s,
 				   struct dfs_event *radar);
-void wpas_ap_event_dfs_cac_finished(struct wpa_supplicant *wpa_s,
-				    struct dfs_event *radar);
-void wpas_ap_event_dfs_cac_aborted(struct wpa_supplicant *wpa_s,
-				   struct dfs_event *radar);
-void wpas_ap_event_dfs_cac_nop_finished(struct wpa_supplicant *wpa_s,
-					struct dfs_event *radar);
+void wpas_event_dfs_cac_started(struct wpa_supplicant *wpa_s,
+				struct dfs_event *radar);
+void wpas_event_dfs_cac_finished(struct wpa_supplicant *wpa_s,
+				 struct dfs_event *radar);
+void wpas_event_dfs_cac_aborted(struct wpa_supplicant *wpa_s,
+				struct dfs_event *radar);
+void wpas_event_dfs_cac_nop_finished(struct wpa_supplicant *wpa_s,
+				     struct dfs_event *radar);
 
 void ap_periodic(struct wpa_supplicant *wpa_s);
 
--- a/wpa_supplicant/events.c
+++ b/wpa_supplicant/events.c
@@ -4220,25 +4220,24 @@ void wpa_supplicant_event(void *ctx, enu
 #ifdef NEED_AP_MLME
 	case EVENT_DFS_RADAR_DETECTED:
 		if (data)
-			wpas_ap_event_dfs_radar_detected(wpa_s,
-							 &data->dfs_event);
+			wpas_event_dfs_radar_detected(wpa_s, &data->dfs_event);
 		break;
 	case EVENT_DFS_CAC_STARTED:
 		if (data)
-			wpas_ap_event_dfs_cac_started(wpa_s, &data->dfs_event);
+			wpas_event_dfs_cac_started(wpa_s, &data->dfs_event);
 		break;
 	case EVENT_DFS_CAC_FINISHED:
 		if (data)
-			wpas_ap_event_dfs_cac_finished(wpa_s, &data->dfs_event);
+			wpas_event_dfs_cac_finished(wpa_s, &data->dfs_event);
 		break;
 	case EVENT_DFS_CAC_ABORTED:
 		if (data)
-			wpas_ap_event_dfs_cac_aborted(wpa_s, &data->dfs_event);
+			wpas_event_dfs_cac_aborted(wpa_s, &data->dfs_event);
 		break;
 	case EVENT_DFS_NOP_FINISHED:
 		if (data)
-			wpas_ap_event_dfs_cac_nop_finished(wpa_s,
-							   &data->dfs_event);
+			wpas_event_dfs_cac_nop_finished(wpa_s,
+							&data->dfs_event);
 		break;
 #endif /* NEED_AP_MLME */
 #endif /* CONFIG_AP */
