--- a/include/mbedtls/config.h
+++ b/include/mbedtls/config.h
@@ -2562,6 +2562,51 @@
  * The value below is only an example, not the default.
  */
 //#define MBEDTLS_SSL_CIPHERSUITES MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
+/*
+ * Mozzila Intermediate compatibility (default) ciphers
+ */
+#define MBEDTLS_SSL_CIPHERSUITES \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA, \
+	MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256, \
+	MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384, \
+	MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256, \
+	MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256, \
+	MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA, \
+	MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA, \
+	MBEDTLS_TLS_RSA_WITH_3DES_EDE_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256, \
+	MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384, \
+	MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA, \
+	MBEDTLS_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA, \
+	MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256, \
+	MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384, \
+	MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256, \
+	MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384, \
+	MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA, \
+	MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA, \
+	MBEDTLS_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA, \
+	MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256, \
+	MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384, \
+	MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256, \
+	MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384, \
+	MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA, \
+	MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA, \
+	MBEDTLS_TLS_PSK_WITH_3DES_EDE_CBC_SHA
+
 
 /* X509 options */
 //#define MBEDTLS_X509_MAX_INTERMEDIATE_CA   8   /**< Maximum number of intermediate CAs in a verification chain. */
--- a/library/ecp.c
+++ b/library/ecp.c
@@ -122,13 +122,17 @@ typedef enum
  *
  * Reminder: update profiles in x509_crt.c when adding a new curves!
  */
+/* Changed order so that >256-bit curves are sorted from smallest to largest */
 static const mbedtls_ecp_curve_info ecp_supported_curves[] =
 {
-#if defined(MBEDTLS_ECP_DP_SECP521R1_ENABLED)
-    { MBEDTLS_ECP_DP_SECP521R1,    25,     521,    "secp521r1"         },
+#if defined(MBEDTLS_ECP_DP_SECP256R1_ENABLED)
+    { MBEDTLS_ECP_DP_SECP256R1,    23,     256,    "secp256r1"         },
 #endif
-#if defined(MBEDTLS_ECP_DP_BP512R1_ENABLED)
-    { MBEDTLS_ECP_DP_BP512R1,      28,     512,    "brainpoolP512r1"   },
+#if defined(MBEDTLS_ECP_DP_SECP256K1_ENABLED)
+    { MBEDTLS_ECP_DP_SECP256K1,    22,     256,    "secp256k1"         },
+#endif
+#if defined(MBEDTLS_ECP_DP_BP256R1_ENABLED)
+    { MBEDTLS_ECP_DP_BP256R1,      26,     256,    "brainpoolP256r1"   },
 #endif
 #if defined(MBEDTLS_ECP_DP_SECP384R1_ENABLED)
     { MBEDTLS_ECP_DP_SECP384R1,    24,     384,    "secp384r1"         },
@@ -136,14 +140,11 @@ static const mbedtls_ecp_curve_info ecp_
 #if defined(MBEDTLS_ECP_DP_BP384R1_ENABLED)
     { MBEDTLS_ECP_DP_BP384R1,      27,     384,    "brainpoolP384r1"   },
 #endif
-#if defined(MBEDTLS_ECP_DP_SECP256R1_ENABLED)
-    { MBEDTLS_ECP_DP_SECP256R1,    23,     256,    "secp256r1"         },
-#endif
-#if defined(MBEDTLS_ECP_DP_SECP256K1_ENABLED)
-    { MBEDTLS_ECP_DP_SECP256K1,    22,     256,    "secp256k1"         },
+#if defined(MBEDTLS_ECP_DP_BP512R1_ENABLED)
+    { MBEDTLS_ECP_DP_BP512R1,      28,     512,    "brainpoolP512r1"   },
 #endif
-#if defined(MBEDTLS_ECP_DP_BP256R1_ENABLED)
-    { MBEDTLS_ECP_DP_BP256R1,      26,     256,    "brainpoolP256r1"   },
+#if defined(MBEDTLS_ECP_DP_SECP521R1_ENABLED)
+    { MBEDTLS_ECP_DP_SECP521R1,    25,     521,    "secp521r1"         },
 #endif
 #if defined(MBEDTLS_ECP_DP_SECP224R1_ENABLED)
     { MBEDTLS_ECP_DP_SECP224R1,    21,     224,    "secp224r1"         },
